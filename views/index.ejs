<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Voice Bot</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .card, .card * {
  color: #fff !important;
}
audio {
  filter: invert(1); /* makes audio controls white on dark bg */
}

    body {
      background: linear-gradient(to bottom right, #0f2027, #203a43, #2c5364);
      color: #fff;
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
    }
    .card {
      background-color: rgba(255, 255, 255, 0.1);
      border: none;
      border-radius: 20px;
      padding: 30px;
      max-width: 500px;
      width: 100%;
      box-shadow: 0 0 20px rgba(0,0,0,0.3);
    }
    .btn-record {
      background-color: #ff6f61;
      border: none;
    }
    .btn-record:hover {
      background-color: #ff4b3e;
    }
    .waveform {
      display: none;
    }
  </style>
</head>
<body>
  <div class="card text-center">
    <h3 class="mb-4">üéôÔ∏è Ask Me Anything</h3>
    <p class="mb-3">Tap the button and ask your question. The bot will answer like Shaik Moinuddin.</p>
    <button class="btn btn-record mb-3" id="recordBtn">üé§ Start Recording</button>
    <div id="status" class="mb-3">Not Recording</div>
    <audio id="responseAudio" controls class="w-100 mt-3" style="display: none;"></audio>
    <p id="responseText" class="mt-3"></p>
  </div>

  <script>
    const recordBtn = document.getElementById("recordBtn");
    const statusText = document.getElementById("status");
    const audioPlayer = document.getElementById("responseAudio");
    const responseText = document.getElementById("responseText");

    let mediaRecorder;
    let chunks = [];

    recordBtn.onclick = async () => {
      if (!mediaRecorder || mediaRecorder.state === "inactive") {
        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
        mediaRecorder = new MediaRecorder(stream);

        mediaRecorder.ondataavailable = e => chunks.push(e.data);

        mediaRecorder.onstop = async () => {
          const blob = new Blob(chunks, { type: 'audio/wav' });
          const formData = new FormData();
          formData.append('audio', blob, 'voice.wav');

          statusText.textContent = 'Processing...';

          const res = await fetch('/voice', {
            method: 'POST',
            body: formData
          });

          const data = await res.json();
          audioPlayer.src = data.audio;
          audioPlayer.style.display = 'block';
          audioPlayer.play();

          responseText.textContent = data.text;
          statusText.textContent = 'Done';
        };

        chunks = [];
        mediaRecorder.start();
        statusText.textContent = 'Recording...';
        recordBtn.textContent = '‚èπÔ∏è Stop Recording';
      } else {
        mediaRecorder.stop();
        recordBtn.textContent = 'üé§ Start Recording';
      }
    };
  </script>
</body>
</html>
